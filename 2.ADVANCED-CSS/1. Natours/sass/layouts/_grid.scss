/*------------------------------------ grid example ----------------------------------------*/


.row {

	max-width: $grid-width;

	margin: 0 auto;



	&:not(:last-child) {

		margin-bottom: $gutter-vertical;



		//! MEDIA QUERY

		@include respond(tab-port) {

			margin-bottom: $gutter-vertical-small;

		}
	}


	/// max-width is now too much for small screen sizes, so make smaller (images will also shrink)

	//! MEDIA QUERY

	@include respond(tab-port) {

	max-width: 50rem;  // 500px
	padding: 0 3rem;

	}



	@include clearfix;


	// no &__needed for  [class^="col-"] as it comppiles as .row .col-(any match)


	[class^="col-"] {


		float: left;

		&:not(:last-child) {

			margin-right: $gutter-horizontal;


			/// as each column has its own row, it doesnt need a gutter


			//! MEDIA QUERY

			@include respond(tab-port) {

				margin-right: 0;
				margin-bottom: $gutter-vertical-small;

			}
		}


		/// to make columns fit, make each one have its own row


		//! MEDIA QUERY

		@include respond(tab-port) {

			width: 100% !important; // make each column have 100%  and override any other confilct

		}

	}



	.col-1-of-2 {

		width: calc((100% - #{$gutter-horizontal}) / 2);

	}



	.col-1-of-3 {

		width: calc((100% - 2 * #{$gutter-horizontal}) / 3);

	}



	.col-2-of-3 {

		width: calc(2 * ((100% - 2 * #{$gutter-horizontal}) / 3) + #{$gutter-horizontal});

	}



	.col-1-of-4 {

		width: calc((100% - 3 * #{$gutter-horizontal}) / 4);

	}



	.col-2-of-4 {

		width: calc(2 * ((100% - 3 * #{$gutter-horizontal}) / 4) + #{$gutter-horizontal});

	}



	.col-3-of-4 {

		width: calc(3 * ((100% - 3 * #{$gutter-horizontal}) / 4) + (2 *#{$gutter-horizontal}));

	}


}