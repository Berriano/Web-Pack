

/*/																				FLEXBOX																			  */




/*/?  Class elements  */


.el--1 {
	background-color: blueviolet;
}
.el--2 {
	background-color: orangered;
}
.el--3 {
	background-color: green;
	height: 150px;
}
.el--4 {
	background-color: goldenrod;
}
.el--5 {
	background-color: palevioletred;
}
.el--6 {
	background-color: steelblue;
}
.el--7 {
	background-color: yellow;
}
.el--8 {
	background-color: crimson;
}



/*/? Main container converted the a flex container*/


.container {

	/* STARTER */

	font-family: sans-serif;
	background-color: #ddd;
	font-size: 35px;
	margin: 40px;




	/*-																 FLEXBOX Container																*/



	/*! setting flex to a container makes it a flex container  */


	display:flex;



	/*! the child elements of the container are now flex items */


	/*! the elements folow the 'MAIN AXIS' and 'CROSS AXIS' of the container*/


	/*! All the following flex items are the height of the highest element(el--3 150px) */





	/*/  														FLEXBOX CONTAINER COMMANDS	 														*/







	/*- 											GAP											  */



	/* ! to create space between items WITHOUT using margin */


	/* /?    gap:2px; 	 */






	/*- 										ALIGN ITEMS 								 */




	
	/*/? to align items along the cross-axis (vertically) */


	/*! align-items: stretch | flex-start | flex-end | center | basleine  */




	/* / top alignment */


	/*!  align items at the top of the container  */


	/*/?		 align-items: start; 		*/


	/* / bottom alignment */


	/*!  align items at the bottom of the container */


	/*/?		 align-items: flex-end; 		*/



	/*/	default is stretch */


	/*! basically stretch to fill the container */


	/*/?		 align-items: stretch; 		*/



	
	/* / vertical centering */


	/*! align items in the centre of the container (75px high)  */


	align-items: center;





	/*- 								JUSTIFY-CONTENT								  */






	/*/? to align items along the main axis (horizontally)  */


	/*!  justify-content: flex-start | flex-end | center */
	/*!		| space-between | space-around | space-evenly */ 




	/*/ horizontal centreing  */


/*!  align items centrally inside the container */


	justify-content: center;



	/*/ insert a space between elements  */

	
	justify-content: space-between	;


}




/*- 								FLEX DIRECTION 							 		*/




/*/?  flex direction enables you to define what is the main axis   */



/* !  flex-direction: row | row-reverse | column | column-reverse */





/*-     				FLEX-WRAP and  ALIGN-CONTENT 				 */


/*!  	ADVANCED FEATURES NOT COVERED IN COURSE */






/*/																FLEX ITEM COMMANDS 																	*/





/*/?  to overwrite align-items for individual flex items */


/*!  align-self: auto | stretch | flex-start | flex-end | center | baseline */



/*/?  to allow element to grow (0 means no, 1+ means yes) */


/*!  flex-grow: 0 | number */



/*/?  to allow element to shrink (0 means no, 1+ means yes) */


/* ! flex-shrink: 0 | number */



/*/?  to define an items width instead of the width property */


/*! flex-basis: auto | length */



/*/?  SHORTHAND FOR GROW / SHRINK / BASIS */


/*!  flex: 0 1 auto;  int | int | length  */




/*/? control the order of the items |  -1 makes them first , 1 makes them last  */


/*! order:0 | number */



