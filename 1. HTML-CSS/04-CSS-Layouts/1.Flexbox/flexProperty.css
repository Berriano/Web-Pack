


/*-															Flex: Property														  	*/



.el--1 {
	background-color: blueviolet;
}
.el--2 {
	background-color: orangered;
}
.el--3 {
	background-color: green;
	height: 150px;
}
.el--4 {
	background-color: goldenrod;
}
.el--5 {
	background-color: palevioletred;
}
.el--6 {
	background-color: steelblue;
}
.el--7 {
	background-color: yellow;
}
.el--8 {
	background-color: crimson;
}




.container {


	font-family: sans-serif;
	background-color: #ddd;
	font-size: 35px;
	margin: 40px;


	/* - flex start- */


	display:flex;

	justify-content: flex-start;

	align-items: center;

	gap:10px;

}



/*- 						  Using the flex:property (grow / shrink / basis)								 */


.el{


/* / Default values of flex: */

/* 
	flex-grow: 0;
	flex-shrink: 1;
	flex-basis: auto;
*/


/*/?  use flex-basis: to set the width of the container elements */


/* ! set each element to 100px; */

/* flex-basis:200px; */

/*!  WILL ONLY SET TO 100PX IF ELEMENT IS ALREADY UNDER 100PX ELSE REMAINS SAME */
/*! Remove gap as it conflicts with the width */

/*! AS FLEX-SHRINK IS SET TO DEFAULT : 1 THE ELEMENTS WILL SHRINK TO FIT THE SCREEN  */
/* !  OVERRIDE BY SETTING IT MANUALLY TO :0 */

/* flex-shrink: 0; */


/* ! flex-grow allows elements to grow as large as they can when set to 1 */


/* flex-grow:1; */


/* ! FLEX-GROW FILLS ANY LEFTOVER EMPTY SPACE EVENLY BETWEEN THE ELEMENTS */



/*/ "USE SHORTHAND" : NEVER SET FLEX GROW LIKE THIS, ALWAYS SET LIKE THIS......... */



/* flex:1; */


/* /?  so to set all flex propertys, use just flex: and set defaults for any unused */


flex: 1 0 200px;

/* ! dont use commas!!!! */



}


/*/ 						FLEX GROW CAN BE SET INDIVIDUALLY ON ANY ELEMENTS									  */


.el--1{

	align-self: flex-start;



	/*/? use flex-grow to fill the leftover pspace with just el--1  */


	/* flex-grow: 1; */


	/* ! the leftover space is filled with just el --1 */


	/*/? flex-grow can be used on the container and a specific element */


	/*! container set to flex-grow:1 */


	/* flex-grow: 2; */


	/*! now the element has twice the leftover space than the other container elements */


/* /?  if the number is set higher then a higher portion is allocated */


/* flex-grow: 3; */


/*! now the element has three times the leftover space */


/*/ The normal way to work is to just use flex-grow in the container for all elements */


}






.el--5{

	align-self: stretch;

}

.el--6 {

	order:-1;

}


.el--2{

order:1;

}


.el--1{

order:2;

}



